"""initial migration

Revision ID: ae418cf492c4
Revises: 
Create Date: 2025-10-25 00:42:22.189096

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ae418cf492c4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('area',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('logged_in', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('street',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('areaId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['areaId'], ['area.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('driver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('areaId', sa.Integer(), nullable=False),
    sa.Column('streetId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['areaId'], ['area.id'], ),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['streetId'], ['street.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resident',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('areaId', sa.Integer(), nullable=False),
    sa.Column('streetId', sa.Integer(), nullable=False),
    sa.Column('houseNumber', sa.Integer(), nullable=False),
    sa.Column('inbox', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['areaId'], ['area.id'], ),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['streetId'], ['street.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drive',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('driverId', sa.Integer(), nullable=False),
    sa.Column('areaId', sa.Integer(), nullable=False),
    sa.Column('streetId', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Time(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['areaId'], ['area.id'], ),
    sa.ForeignKeyConstraint(['driverId'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['streetId'], ['street.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('driver_stock',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('driverId', sa.Integer(), nullable=False),
    sa.Column('itemId', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['driverId'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['itemId'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stop',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('driveId', sa.Integer(), nullable=False),
    sa.Column('residentId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['driveId'], ['drive.id'], ),
    sa.ForeignKeyConstraint(['residentId'], ['resident.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stop')
    op.drop_table('driver_stock')
    op.drop_table('drive')
    op.drop_table('resident')
    op.drop_table('driver')
    op.drop_table('street')
    op.drop_table('admin')
    op.drop_table('user')
    op.drop_table('item')
    op.drop_table('area')
    # ### end Alembic commands ###
